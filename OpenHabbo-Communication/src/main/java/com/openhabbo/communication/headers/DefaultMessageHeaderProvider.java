package com.openhabbo.communication.headers;

import com.google.common.collect.BiMap;
import com.google.common.collect.HashBiMap;
import com.openhabbo.api.communication.headers.MessageHeaderProvider;
import com.openhabbo.communication.composers.advertisement.InterstitialMessageComposer;
import com.openhabbo.communication.composers.advertisement.RoomAdMessageComposer;
import com.openhabbo.communication.composers.availability.*;
import com.openhabbo.communication.composers.avatar.ChangeUserNameResultMessageComposer;
import com.openhabbo.communication.composers.avatar.CheckUserNameResultMessageComposer;
import com.openhabbo.communication.composers.avatar.WardrobeMessageComposer;
import com.openhabbo.communication.composers.catalog.*;
import com.openhabbo.communication.composers.error.ErrorReportMessageComposer;
import com.openhabbo.communication.composers.facebook.FaceBookAppRequestMessageComposer;
import com.openhabbo.communication.composers.facebook.FaceBookAuthenticateMessageComposer;
import com.openhabbo.communication.composers.facebook.FaceBookErrorMessageComposer;
import com.openhabbo.communication.composers.friendlist.*;
import com.openhabbo.communication.composers.handshake.*;
import com.openhabbo.communication.composers.help.*;
import com.openhabbo.communication.composers.inventory.achievements.AchievementMessageComposer;
import com.openhabbo.communication.composers.inventory.achievements.AchievementsMessageComposer;
import com.openhabbo.communication.composers.inventory.achievements.AchievementsScoreMessageComposer;
import com.openhabbo.communication.composers.inventory.avatareffect.*;
import com.openhabbo.communication.composers.inventory.badges.BadgePointLimitsMessageComposer;
import com.openhabbo.communication.composers.inventory.badges.BadgesMessageComposer;
import com.openhabbo.communication.composers.inventory.furni.*;
import com.openhabbo.communication.composers.inventory.pets.PetAddedToInventoryMessageComposer;
import com.openhabbo.communication.composers.inventory.pets.PetInventoryMessageComposer;
import com.openhabbo.communication.composers.inventory.pets.PetReceivedMessageComposer;
import com.openhabbo.communication.composers.inventory.pets.PetRemovedFromInventoryMessageComposer;
import com.openhabbo.communication.composers.inventory.purse.CreditBalanceMessageComposer;
import com.openhabbo.communication.composers.inventory.trading.*;
import com.openhabbo.communication.composers.marketplace.*;
import com.openhabbo.communication.composers.moderation.*;
import com.openhabbo.communication.composers.navigator.*;
import com.openhabbo.communication.composers.notifications.*;
import com.openhabbo.communication.composers.poll.*;
import com.openhabbo.communication.composers.quest.QuestCancelledMessageComposer;
import com.openhabbo.communication.composers.quest.QuestCompletedMessageComposer;
import com.openhabbo.communication.composers.quest.QuestMessageComposer;
import com.openhabbo.communication.composers.quest.QuestsMessageComposer;
import com.openhabbo.communication.composers.recycler.RecyclerFinishedMessageComposer;
import com.openhabbo.communication.composers.recycler.RecyclerPrizesMessageComposer;
import com.openhabbo.communication.composers.recycler.RecyclerStatusMessageComposer;
import com.openhabbo.communication.composers.room.action.*;
import com.openhabbo.communication.composers.room.camera.CameraSnapshotMessageComposer;
import com.openhabbo.communication.composers.room.chat.*;
import com.openhabbo.communication.composers.room.engine.*;
import com.openhabbo.communication.composers.room.furniture.*;
import com.openhabbo.communication.composers.room.permissions.YouAreControllerMessageComposer;
import com.openhabbo.communication.composers.room.permissions.YouAreNotControllerMessageComposer;
import com.openhabbo.communication.composers.room.permissions.YouAreOwnerMessageComposer;
import com.openhabbo.communication.composers.room.pets.*;
import com.openhabbo.communication.composers.room.publicroom.OpenLockerRoomMessageComposer;
import com.openhabbo.communication.composers.room.publicroom.ParkBusCannotEnterMessageComposer;
import com.openhabbo.communication.composers.room.publicroom.ParkBusDoorMessageComposer;
import com.openhabbo.communication.composers.room.session.*;
import com.openhabbo.communication.composers.roomsettings.*;
import com.openhabbo.communication.composers.sound.*;
import com.openhabbo.communication.composers.tracking.LatencyPingResponseMessageComposer;
import com.openhabbo.communication.composers.userdefinedroomevents.OpenMessageComposer;
import com.openhabbo.communication.composers.userdefinedroomevents.WiredFurniActionMessageComposer;
import com.openhabbo.communication.composers.userdefinedroomevents.WiredFurniConditionMessageComposer;
import com.openhabbo.communication.composers.userdefinedroomevents.WiredFurniTriggerMessageComposer;
import com.openhabbo.communication.composers.users.*;
import com.openhabbo.communication.events.advertisement.GetInterstitialMessageEvent;
import com.openhabbo.communication.events.advertisement.GetRoomAdMessageEvent;
import com.openhabbo.communication.events.avatar.ChangeUserNameMessageEvent;
import com.openhabbo.communication.events.avatar.CheckUserNameMessageEvent;
import com.openhabbo.communication.events.avatar.GetWardrobeMessageEvent;
import com.openhabbo.communication.events.avatar.SaveWardrobeOutfitMessageEvent;
import com.openhabbo.communication.events.catalog.*;
import com.openhabbo.communication.events.facebook.FaceBookInitiateAddFriendsMessageEvent;
import com.openhabbo.communication.events.facebook.FaceBookIsLoggedOffMessageEvent;
import com.openhabbo.communication.events.facebook.FaceBookIsLoggedOnMessageEvent;
import com.openhabbo.communication.events.friendlist.*;
import com.openhabbo.communication.events.handshake.*;
import com.openhabbo.communication.events.help.*;
import com.openhabbo.communication.events.inventory.achievements.GetAchievementsMessageEvent;
import com.openhabbo.communication.events.inventory.avatareffect.AvatarEffectActivatedMessageEvent;
import com.openhabbo.communication.events.inventory.avatareffect.AvatarEffectSelectedMessageEvent;
import com.openhabbo.communication.events.inventory.badges.GetBadgePointLimitsMessageEvent;
import com.openhabbo.communication.events.inventory.badges.GetBadgesMessageEvent;
import com.openhabbo.communication.events.inventory.badges.SetActivatedBadgesMessageEvent;
import com.openhabbo.communication.events.inventory.furni.RequestFurniInventoryMessageEvent;
import com.openhabbo.communication.events.inventory.furni.RequestRoomPropertySetMessageEvent;
import com.openhabbo.communication.events.inventory.pets.GetPetInventoryMessageEvent;
import com.openhabbo.communication.events.inventory.purse.GetCreditsInfoMessageEvent;
import com.openhabbo.communication.events.inventory.trading.*;
import com.openhabbo.communication.events.marketplace.*;
import com.openhabbo.communication.events.moderator.*;
import com.openhabbo.communication.events.navigator.*;
import com.openhabbo.communication.events.notifications.ResetUnseenItemsMessageEvent;
import com.openhabbo.communication.events.poll.PollAnswerMessageEvent;
import com.openhabbo.communication.events.poll.PollRejectMessageEvent;
import com.openhabbo.communication.events.poll.PollStartMessageEvent;
import com.openhabbo.communication.events.poll.VoteAnswerMessageEvent;
import com.openhabbo.communication.events.quest.*;
import com.openhabbo.communication.events.recycler.GetRecyclerPrizesMessageEvent;
import com.openhabbo.communication.events.recycler.GetRecyclerStatusMessageEvent;
import com.openhabbo.communication.events.recycler.RecycleItemsMessageEvent;
import com.openhabbo.communication.events.register.UpdateFigureDataMessageEvent;
import com.openhabbo.communication.events.room.action.*;
import com.openhabbo.communication.events.room.avatar.*;
import com.openhabbo.communication.events.room.chat.*;
import com.openhabbo.communication.events.room.engine.*;
import com.openhabbo.communication.events.room.furniture.*;
import com.openhabbo.communication.events.room.pets.GetPetInfoMessageEvent;
import com.openhabbo.communication.events.room.pets.RespectPetMessageEvent;
import com.openhabbo.communication.events.room.publicroom.ChangeRoomMessageEvent;
import com.openhabbo.communication.events.room.publicroom.ExitLockerRoomMessageEvent;
import com.openhabbo.communication.events.room.publicroom.TryBusMessageEvent;
import com.openhabbo.communication.events.room.session.*;
import com.openhabbo.communication.events.roomsettings.DeleteRoomMessageEvent;
import com.openhabbo.communication.events.roomsettings.GetRoomSettingsMessageEvent;
import com.openhabbo.communication.events.roomsettings.SaveRoomSettingsMessageEvent;
import com.openhabbo.communication.events.sound.*;
import com.openhabbo.communication.events.tracking.*;
import com.openhabbo.communication.events.userdefinedroomevents.*;
import com.openhabbo.communication.events.users.*;

import java.util.HashMap;

public class DefaultMessageHeaderProvider implements MessageHeaderProvider {

    private final BiMap composerClasses = HashBiMap.create(new HashMap<Class, Short>() {{
        put(SecretKeyMessageComposer.class, (short) 1);
        put(InitCryptoMessageComposer.class, (short) 277);
        put(SessionParamsMessageComposer.class, (short) 0x0101);
        put(UserRightsMessageComposer.class, (short) 2);
        put(AuthenticationOKMessageComposer.class, (short) 3);
        put(PingMessageComposer.class, (short) 50);
        put(UserObjectMessageComposer.class, (short) 5);
        put(UniqueMachineIDMessageComposer.class, (short) 439);
        put(GenericErrorMessageComposer.class, (short) 33);
        put(DisconnectReasonMessageComposer.class, (short) 287);
        put(IdentityAccountsMessageComposer.class, (short) 626);
        put(AvailabilityStatusMessageComposer.class, (short) 290);
        put(InfoHotelClosingMessageComposer.class, (short) 291);
        put(InfoHotelClosedMessageComposer.class, (short) 292);
        put(AvailabilityTimeMessageComposer.class, (short) 293);
        put(LoginFailedHotelClosedMessageComposer.class, (short) 294);
        put(MessengerInitMessageComposer.class, (short) 12);
        put(NewBuddyRequestMessageComposer.class, (short) 132);
        put(NewConsoleMessageComposer.class, (short) 134);
        put(MessengerErrorMessageComposer.class, (short) 260);
        put(InstantMessageErrorMessageComposer.class, (short) 261);
        put(BuddyRequestsMessageComposer.class, (short) 314);
        put(AcceptBuddyResultMessageComposer.class, (short) 315);
        put(FriendListUpdateMessageComposer.class, (short) 13);
        put(HabboSearchResultMessageComposer.class, (short) 435);
        put(FollowFriendFailedMessageComposer.class, (short) 349);
        put(RoomInviteErrorMessageComposer.class, (short) 262);
        put(RoomInviteMessageComposer.class, (short) 135);
        put(FindFriendsProcessResultMessageComposer.class, (short) 831);
        put(FriendNotificationMessageComposer.class, (short) 833);
        put(StreamMessageComposer.class, (short) 950);
        put(CreditBalanceMessageComposer.class, (short) 6);
        put(FurniListInsertMessageComposer.class, (short) 98);
        put(FurniListRemoveMessageComposer.class, (short) 99);
        put(FurniListUpdateMessageComposer.class, (short) 101);
        put(FurniListMessageComposer.class, (short) 140);
        put(PostItPlacedMessageComposer.class, (short) 145);
        put(AvatarEffectsMessageComposer.class, (short) 460);
        put(AvatarEffectAddedMessageComposer.class, (short) 461);
        put(AvatarEffectActivatedMessageComposer.class, (short) 462);
        put(AvatarEffectExpiredMessageComposer.class, (short) 463);
        put(AvatarEffectSelectedMessageComposer.class, (short) 464);
        put(BadgesMessageComposer.class, (short) 229);
        put(BadgePointLimitsMessageComposer.class, (short) 627);
        put(AchievementsMessageComposer.class, (short) 436);
        put(AchievementsScoreMessageComposer.class, (short) 443);
        put(AchievementMessageComposer.class, (short) 913);
        put(TradingYouAreNotAllowedMessageComposer.class, (short) 102);
        put(TradingOtherNotAllowedMessageComposer.class, (short) 103);
        put(TradingOpenMessageComposer.class, (short) 104);
        put(TradingAlreadyOpenMessageComposer.class, (short) 105);
        put(TradingNotOpenMessageComposer.class, (short) 106);
        put(TradingNoSuchItemMessageComposer.class, (short) 107);
        put(TradingItemListMessageComposer.class, (short) 108);
        put(TradingAcceptMessageComposer.class, (short) 109);
        put(TradingCloseMessageComposer.class, (short) 110);
        put(TradingConfirmationMessageComposer.class, (short) 111);
        put(TradingCompletedMessageComposer.class, (short) 112);
        put(PetInventoryMessageComposer.class, (short) 600);
        put(PetAddedToInventoryMessageComposer.class, (short) 603);
        put(PetRemovedFromInventoryMessageComposer.class, (short) 604);
        put(PetReceivedMessageComposer.class, (short) 607);
        put(MarketplaceMakeOfferResultMessageComposer.class, (short) 610);
        put(MarketplaceCanMakeOfferResultMessageComposer.class, (short) 611);
        put(MarketplaceConfigurationMessageComposer.class, (short) 612);
        put(MarketplaceBuyOfferResultMessageComposer.class, (short) 613);
        put(MarketplaceCancelOfferResultMessageComposer.class, (short) 614);
        put(MarketPlaceOffersMessageComposer.class, (short) 615);
        put(MarketPlaceOwnOffersMessageComposer.class, (short) 616);
        put(MarketplaceItemStatsMessageComposer.class, (short) 617);
        put(UserFlatCatsMessageComposer.class, (short) 221);
        put(FlatCatMessageComposer.class, (short) 222);
        put(CanCreateRoomMessageComposer.class, (short) 367);
        put(RoomEventMessageComposer.class, (short) 370);
        put(DoorbellMessageComposer.class, (short) 91);
        put(FlatAccessDeniedMessageComposer.class, (short) 131);
        put(RoomSettingsDataMessageComposer.class, (short) 465);
        put(RoomSettingsErrorMessageComposer.class, (short) 466);
        put(RoomSettingsSavedMessageComposer.class, (short) 467);
        put(RoomSettingsSaveErrorMessageComposer.class, (short) 468);
        put(NoSuchFlatMessageComposer.class, (short) 44);
        put(OfficialRoomsMessageComposer.class, (short) 450);
        put(GuestRoomSearchResultMessageComposer.class, (short) 451);
        put(PopularRoomTagsResultMessageComposer.class, (short) 452);
        put(PublicSpaceCastLibsMessageComposer.class, (short) 453);
        put(GetGuestRoomResultMessageComposer.class, (short) 454);
        put(NavigatorSettingsMessageComposer.class, (short) 455);
        put(RoomInfoUpdatedMessageComposer.class, (short) 456);
        put(RoomThumbnailUpdateResultMessageComposer.class, (short) 457);
        put(FavouritesMessageComposer.class, (short) 458);
        put(FavouriteChangedMessageComposer.class, (short) 459);
        put(FlatCreatedMessageComposer.class, (short) 59);
        put(RoomRatingMessageComposer.class, (short) 345);
        put(FlatControllerAddedMessageComposer.class, (short) 510);
        put(FlatControllerRemovedMessageComposer.class, (short) 511);
        put(CanCreateRoomMessageComposer.class, (short) 0x0200);
        put(CloseConnectionMessageComposer.class, (short) 18);
        put(OpenConnectionMessageComposer.class, (short) 19);
        put(RoomQueueStatusMessageComposer.class, (short) 259);
        put(RoomForwardMessageComposer.class, (short) 286);
        put(ChatMessageComposer.class, (short) 24);
        put(WhisperMessageComposer.class, (short) 25);
        put(ShoutMessageComposer.class, (short) 26);
        put(UserTypingMessageComposer.class, (short) 361);
        put(FloodControlMessageComposer.class, (short) 27);
        put(FlatAccessibleMessageComposer.class, (short) 41);
        put(RoomReadyMessageComposer.class, (short) 69);
        put(UsersMessageComposer.class, (short) 28);
        put(UserRemoveMessageComposer.class, (short) 29);
        put(HeightMapMessageComposer.class, (short) 31);
        put(ObjectsMessageComposer.class, (short) 32);
        put(UserUpdateMessageComposer.class, (short) 34);
        put(ItemsMessageComposer.class, (short) 45);
        put(ItemDataUpdateMessageComposer.class, (short) 48);
        put(ItemAddMessageComposer.class, (short) 83);
        put(ItemRemoveMessageComposer.class, (short) 84);
        put(ItemUpdateMessageComposer.class, (short) 85);
        put(ObjectAddMessageComposer.class, (short) 93);
        put(ViralTeaserActiveMessageComposer.class, (short) 805);
        put(ObjectDataUpdateMessageComposer.class, (short) 88);
        put(ObjectRemoveMessageComposer.class, (short) 94);
        put(ObjectUpdateMessageComposer.class, (short) 95);
        put(PetInfoMessageComposer.class, (short) 210);
        put(HeightMapUpdateMessageComposer.class, (short) 219);
        put(SlideObjectBundleMessageComposer.class, (short) 230);
        put(YouAreSpectatorMessageComposer.class, (short) 254);
        put(UserChangeMessageComposer.class, (short) 266);
        put(RoomDimmerPresetsMessageComposer.class, (short) 365);
        put(FloorHeightMapMessageComposer.class, (short) 470);
        put(RoomEntryInfoMessageComposer.class, (short) 471);
        put(RoomVisualizationSettingsMessageComposer.class, (short) 472);
        put(ObjectsDataUpdateMessageComposer.class, (short) 473);
        put(PlaceObjectErrorMessageComposer.class, (short) 516);
        put(UserNameChangedMessageComposer.class, (short) 572);
        put(ViralFurniGiftReceivedMessageComposer.class, (short) 806);
        put(ViralFurniStatusMessageComposer.class, (short) 807);
        put(UserNotificationMessageComposer.class, (short) 808);
        put(WelcomeGiftStatusMessageComposer.class, (short) 829);
        put(FurnitureAliasesMessageComposer.class, (short) 297);
        put(RoomPropertyMessageComposer.class, (short) 46);
        put(YouAreControllerMessageComposer.class, (short) 42);
        put(YouAreNotControllerMessageComposer.class, (short) 43);
        put(YouAreOwnerMessageComposer.class, (short) 47);
        put(RequestSpamWallPostItMessageComposer.class, (short) 911);
        put(RoomMessageNotificationMessageComposer.class, (short) 912);
        put(CantConnectMessageComposer.class, (short) 224);
        put(PetInfoMessageComposer.class, (short) 601);
        put(PetCommandsMessageComposer.class, (short) 605);
        put(PetPlacingErrorMessageComposer.class, (short) 608);
        put(PetExperienceMessageComposer.class, (short) 609);
        put(PetRespectFailedMessageComposer.class, (short) 621);
        put(DanceMessageComposer.class, (short) 480);
        put(WaveMessageComposer.class, (short) 481);
        put(CarryObjectMessageComposer.class, (short) 482);
        put(AvatarEffectMessageComposer.class, (short) 485);
        put(SleepMessageComposer.class, (short) 486);
        put(UseObjectMessageComposer.class, (short) 488);
        put(DiceValueMessageComposer.class, (short) 90);
        put(PresentOpenedMessageComposer.class, (short) 129);
        put(OpenPetPackageRequestedMessageComposer.class, (short) 825);
        put(OpenPetPackageResultMessageComposer.class, (short) 826);
        put(OneWayDoorStatusMessageComposer.class, (short) 312);
        put(PublicRoomObjectsMessageComposer.class, (short) 30);
        put(DoorOtherEndDeletedMessageComposer.class, (short) 63);
        put(DoorNotInstalledMessageComposer.class, (short) 64);
        put(UserTagsMessageComposer.class, (short) 350);
        put(HabboUserBadgesMessageComposer.class, (short) 228);
        put(HabboGroupBadgesMessageComposer.class, (short) 309);
        put(HabboGroupDetailsMessageComposer.class, (short) 311);
        put(IgnoreResultMessageComposer.class, (short) 419);
        put(IgnoredUsersMessageComposer.class, (short) 420);
        put(RespectNotificationMessageComposer.class, (short) 440);
        put(PetRespectNotificationMessageComposer.class, (short) 606);
        put(UserBannedMessageComposer.class, (short) 35);
        put(ModMessageComposer.class, (short) 161);
        put(IssueDeletedMessageComposer.class, (short) 273);
        put(IssueInfoMessageComposer.class, (short) 530);
        put(ModeratorInitMessageComposer.class, (short) 531);
        put(IssuePickFailedMessageComposer.class, (short) 532);
        put(ModeratorUserInfoMessageComposer.class, (short) 533);
        put(CfhChatlogMessageComposer.class, (short) 534);
        put(RoomChatlogMessageComposer.class, (short) 535);
        put(UserChatlogMessageComposer.class, (short) 536);
        put(RoomVisitsMessageComposer.class, (short) 537);
        put(ModeratorRoomInfoMessageComposer.class, (short) 538);
        put(ModeratorActionResultMessageComposer.class, (short) 539);
        put(CallForHelpReplyMessageComposer.class, (short) 274);
        put(CallForHelpPendingCallsMessageComposer.class, (short) 319);
        put(CallForHelpPendingCallsDeletedMessageComposer.class, (short) 320);
        put(CallForHelpResultMessageComposer.class, (short) 321);
        put(FaqClientFaqsMessageComposer.class, (short) 518);
        put(FaqCategoriesMessageComposer.class, (short) 519);
        put(FaqTextMessageComposer.class, (short) 520);
        put(FaqSearchResultsMessageComposer.class, (short) 521);
        put(FaqCategoryMessageComposer.class, (short) 522);
        put(IssueCloseNotificationMessageComposer.class, (short) 540);
        put(TutorialStatusMessageComposer.class, (short) 575);
        put(HotelMergeNameChangeMessageComposer.class, (short) 573);
        put(ErrorReportMessageComposer.class, (short) 299);
        put(ChangeEmailResultMessageComposer.class, (short) 830);
        put(ScrSendUserInfoMessageComposer.class, (short) 7);
        put(HabboBroadcastMessageComposer.class, (short) 139);
        put(ClubGiftNotificationMessageComposer.class, (short) 280);
        put(HabboAchievementNotificationMessageComposer.class, (short) 437);
        put(HabboAchievementBonusMessageComposer.class, (short) 445);
        put(HabboAchievementShareIdMessageComposer.class, (short) 444);
        put(HabboActivityPointNotificationMessageComposer.class, (short) 438);
        put(ActivityPointsMessageComposer.class, (short) 628);
        put(InfoFeedEnableMessageComposer.class, (short) 517);
        put(PetLevelNotificationMessageComposer.class, (short) 602);
        put(MOTDNotificationMessageComposer.class, (short) 810);
        put(UnseenItemsMessageComposer.class, (short) 832);
        put(CatalogIndexMessageComposer.class, (short) 126);
        put(CatalogPageMessageComposer.class, (short) 127);
        put(PurchaseErrorMessageComposer.class, (short) 65);
        put(PurchaseOKMessageComposer.class, (short) 67);
        put(NotEnoughBalanceMessageComposer.class, (short) 68);
        put(GiftReceiverNotFoundMessageComposer.class, (short) 76);
        put(PurchaseNotAllowedMessageComposer.class, (short) 296);
        put(CatalogPublishedMessageComposer.class, (short) 441);
        put(VoucherRedeemOkMessageComposer.class, (short) 212);
        put(VoucherRedeemErrorMessageComposer.class, (short) 213);
        put(GiftWrappingConfigurationMessageComposer.class, (short) 620);
        put(IsOfferGiftableMessageComposer.class, (short) 622);
        put(ClubGiftInfoMessageComposer.class, (short) 623);
        put(ClubGiftSelectedMessageComposer.class, (short) 624);
        put(HabboClubOffersMessageComposer.class, (short) 625);
        put(ChargeInfoMessageComposer.class, (short) 629);
        put(SellablePetBreedsMessageComposer.class, (short) 827);
        put(HabboClubExtendOfferMessageComposer.class, (short) 630);
        put(RecyclerPrizesMessageComposer.class, (short) 506);
        put(RecyclerStatusMessageComposer.class, (short) 507);
        put(RecyclerFinishedMessageComposer.class, (short) 508);
        put(RoomAdMessageComposer.class, (short) 208);
        put(InterstitialMessageComposer.class, (short) 258);
        put(LatencyPingResponseMessageComposer.class, (short) 354);
        put(VoteQuestionMessageComposer.class, (short) 79);
        put(VoteResultMessageComposer.class, (short) 80);
        put(PollOfferMessageComposer.class, (short) 316);
        put(PollContentsMessageComposer.class, (short) 317);
        put(PollErrorMessageComposer.class, (short) 318);
        put(ParkBusCannotEnterMessageComposer.class, (short) 81);
        put(ParkBusDoorMessageComposer.class, (short) 503);
        put(OpenLockerRoomMessageComposer.class, (short) 96);
        put(ApproveNameMessageComposer.class, (short) 36);
        put(SoundSettingsMessageComposer.class, (short) 308);
        put(TraxSongInfoMessageComposer.class, (short) 300);
        put(PlayListMessageComposer.class, (short) 323);
        put(UserSongDisksInventoryMessageComposer.class, (short) 333);
        put(JukeboxSongDisksMessageComposer.class, (short) 334);
        put(PlayListSongAddedMessageComposer.class, (short) 335);
        put(NowPlayingMessageComposer.class, (short) 327);
        put(JukeboxPlayListFullMessageComposer.class, (short) 337);
        put(WardrobeMessageComposer.class, (short) 267);
        put(ChangeUserNameResultMessageComposer.class, (short) 570);
        put(CheckUserNameResultMessageComposer.class, (short) 571);
        put(WiredFurniTriggerMessageComposer.class, (short) 650);
        put(WiredFurniActionMessageComposer.class, (short) 651);
        put(WiredFurniConditionMessageComposer.class, (short) 652);
        put(OpenMessageComposer.class, (short) 653);
        put(YouArePlayingGameMessageComposer.class, (short) 700);
        put(GamePlayerValueMessageComposer.class, (short) 701);
        put(QuestsMessageComposer.class, (short) 800);
        put(QuestCompletedMessageComposer.class, (short) 801);
        put(QuestMessageComposer.class, (short) 802);
        put(QuestCancelledMessageComposer.class, (short) 803);
        put(FaceBookAuthenticateMessageComposer.class, (short) 901);
        put(FaceBookErrorMessageComposer.class, (short) 902);
        put(FaceBookAppRequestMessageComposer.class, (short) 910);
        put(CameraSnapshotMessageComposer.class, (short) 1000);
    }});

    private final BiMap eventClasses = HashBiMap.create(new HashMap<Class, Short>() {{
        put(InitCryptoMessageEvent.class, (short) 206);
        put(GenerateSecretKeyMessageEvent.class, (short) 2002);
        put(VersionCheckMessageEvent.class, (short) 1170);
        put(UniqueIDMessageEvent.class, (short) 813);
        put(GetSessionParametersMessageEvent.class, (short) 1817);
        put(SSOTicketMessageEvent.class, (short) 415);
        put(TryLoginMessageEvent.class, (short) 756);
        put(PongMessageEvent.class, (short) 196);
        put(InfoRetrieveMessageEvent.class, (short) 7);
        put(DisconnectMessageEvent.class, (short) 0x0200);
        put(MessengerInitMessageEvent.class, (short) 12);
        put(FriendListUpdateMessageEvent.class, (short) 15);
        put(SendMsgMessageEvent.class, (short) 33);
        put(AcceptBuddyMessageEvent.class, (short) 37);
        put(DeclineBuddyMessageEvent.class, (short) 38);
        put(RequestBuddyMessageEvent.class, (short) 39);
        put(RemoveBuddyMessageEvent.class, (short) 40);
        put(HabboSearchMessageEvent.class, (short) 41);
        put(GetBuddyRequestsMessageEvent.class, (short) 233);
        put(FollowFriendMessageEvent.class, (short) 262);
        put(SendRoomInviteMessageEvent.class, (short) 34);
        put(FindNewFriendsMessageEvent.class, (short) 490);
        put(GetEventStreamMessageEvent.class, (short) 500);
        put(SetEventStreamingAllowedMessageEvent.class, (short) 501);
        put(GetCreditsInfoMessageEvent.class, (short) 8);
        put(RequestRoomPropertySetMessageEvent.class, (short) 66);
        put(RequestFurniInventoryMessageEvent.class, (short) 404);
        put(AvatarEffectSelectedMessageEvent.class, (short) 372);
        put(AvatarEffectActivatedMessageEvent.class, (short) 373);
        put(GetBadgesMessageEvent.class, (short) 157);
        put(SetActivatedBadgesMessageEvent.class, (short) 158);
        put(GetBadgePointLimitsMessageEvent.class, (short) 3032);
        put(GetAchievementsMessageEvent.class, (short) 370);
        put(UnacceptTradingMessageEvent.class, (short) 68);
        put(AcceptTradingMessageEvent.class, (short) 69);
        put(CloseTradingMessageEvent.class, (short) 70);
        put(OpenTradingMessageEvent.class, (short) 71);
        put(AddItemToTradeMessageEvent.class, (short) 72);
        put(ConfirmAcceptTradingMessageEvent.class, (short) 402);
        put(ConfirmDeclineTradingMessageEvent.class, (short) 403);
        put(RemoveItemFromTradeMessageEvent.class, (short) 405);
        put(GetPetInventoryMessageEvent.class, (short) 3000);
        put(MakeOfferMessageEvent.class, (short) 3010);
        put(GetMarketplaceConfigurationMessageEvent.class, (short) 3011);
        put(GetMarketplaceCanMakeOfferMessageEvent.class, (short) 3012);
        put(BuyMarketplaceTokensMessageEvent.class, (short) 3013);
        put(BuyOfferMessageEvent.class, (short) 3014);
        put(CancelOfferMessageEvent.class, (short) 3015);
        put(RedeemOfferCreditsMessageEvent.class, (short) 3016);
        put(GetOffersMessageEvent.class, (short) 3018);
        put(GetOwnOffersMessageEvent.class, (short) 3019);
        put(GetMarketplaceItemStatsMessageEvent.class, (short) 3020);
        put(DeleteFavouriteRoomMessageEvent.class, (short) 20);
        put(AddFavouriteRoomMessageEvent.class, (short) 19);
        put(GetUserFlatCatsMessageEvent.class, (short) 151);
        put(CanCreateEventMessageEvent.class, (short) 345);
        put(CreateEventMessageEvent.class, (short) 346);
        put(CancelEventMessageEvent.class, (short) 347);
        put(EditEventMessageEvent.class, (short) 348);
        put(GetRoomSettingsMessageEvent.class, (short) 400);
        put(SaveRoomSettingsMessageEvent.class, (short) 401);
        put(DeleteRoomMessageEvent.class, (short) 23);
        put(GetOfficialRoomsMessageEvent.class, (short) 380);
        put(GetPopularRoomTagsMessageEvent.class, (short) 382);
        put(UpdateNavigatorSettingsMessageEvent.class, (short) 384);
        put(GetGuestRoomMessageEvent.class, (short) 385);
        put(UpdateRoomThumbnailMessageEvent.class, (short) 386);
        put(CanCreateRoomMessageEvent.class, (short) 387);
        put(CreateFlatMessageEvent.class, (short) 29);
        put(RateFlatMessageEvent.class, (short) 261);
        put(GetPublicSpaceCastLibsMessageEvent.class, (short) 388);
        put(PopularRoomsSearchMessageEvent.class, (short) 430);
        put(RoomsWithHighestScoreSearchMessageEvent.class, (short) 431);
        put(MyFriendsRoomsSearchMessageEvent.class, (short) 432);
        put(RoomsWhereMyFriendsAreSearchMessageEvent.class, (short) 433);
        put(MyRoomsSearchMessageEvent.class, (short) 434);
        put(MyFavouriteRoomsSearchMessageEvent.class, (short) 435);
        put(MyRoomHistorySearchMessageEvent.class, (short) 436);
        put(RoomTextSearchMessageEvent.class, (short) 437);
        put(RoomTagSearchMessageEvent.class, (short) 438);
        put(LatestEventsSearchMessageEvent.class, (short) 439);
        put(ToggleStaffPickMessageEvent.class, (short) 483);
        put(GetPetCommandsMessageEvent.class, (short) 3004);
        put(OpenConnectionMessageEvent.class, (short) 2);
        put(OpenFlatConnectionMessageEvent.class, (short) 391);
        put(ChatMessageEvent.class, (short) 52);
        put(ShoutMessageEvent.class, (short) 55);
        put(WhisperMessageEvent.class, (short) 56);
        put(StartTypingMessageEvent.class, (short) 317);
        put(CancelTypingMessageEvent.class, (short) 318);
        put(SignMessageEvent.class, (short) 104);
        put(ChangeMottoMessageEvent.class, (short) 484);
        put(GoToFlatMessageEvent.class, (short) 59);
        put(GetRoomEntryDataMessageEvent.class, (short) 390);
        put(UseFurnitureMessageEvent.class, (short) 392);
        put(PickupObjectMessageEvent.class, (short) 67);
        put(MoveObjectMessageEvent.class, (short) 73);
        put(SetObjectDataMessageEvent.class, (short) 74);
        put(MoveAvatarMessageEvent.class, (short) 75);
        put(PlaceObjectMessageEvent.class, (short) 90);
        put(MoveWallItemMessageEvent.class, (short) 91);
        put(PlacePetMessageEvent.class, (short) 3002);
        put(RemovePetFromFlatMessageEvent.class, (short) 3003);
        put(ViralTeaserFoundMessageEvent.class, (short) 3103);
        put(GetMOTDMessageEvent.class, (short) 3110);
        put(GetUserNotificationsMessageEvent.class, (short) 3105);
        put(ChangeQueueMessageEvent.class, (short) 211);
        put(RoomDimmerGetPresetsMessageEvent.class, (short) 341);
        put(RoomDimmerSavePresetMessageEvent.class, (short) 342);
        put(RoomDimmerChangeStateMessageEvent.class, (short) 343);
        put(UseWallItemMessageEvent.class, (short) 393);
        put(GetItemDataMessageEvent.class, (short) 83);
        put(SetItemDataMessageEvent.class, (short) 84);
        put(RemoveItemMessageEvent.class, (short) 85);
        put(ViralFurniStatusMessageEvent.class, (short) 3104);
        put(GetPetInfoMessageEvent.class, (short) 3001);
        put(GetFurnitureAliasesMessageEvent.class, (short) 215);
        put(QuitMessageEvent.class, (short) 53);
        put(PlacePostItMessageEvent.class, (short) 3254);
        put(AddSpamWallPostItMessageEvent.class, (short) 3255);
        put(DanceMessageEvent.class, (short) 93);
        put(WaveMessageEvent.class, (short) 94);
        put(LookToMessageEvent.class, (short) 79);
        put(ThrowDiceMessageEvent.class, (short) 76);
        put(DiceOffMessageEvent.class, (short) 77);
        put(PresentOpenMessageEvent.class, (short) 78);
        put(CreditFurniRedeemMessageEvent.class, (short) 183);
        put(EnterOneWayDoorMessageEvent.class, (short) 232);
        put(SpinWheelOfFortuneMessageEvent.class, (short) 247);
        put(SetRandomStateMessageEvent.class, (short) 314);
        put(SetClothingChangeDataMessageEvent.class, (short) 480);
        put(QuestVendingWallItemMessageEvent.class, (short) 3100);
        put(OpenPetPackageMessageEvent.class, (short) 3006);
        put(OpenWelcomeGiftMessageEvent.class, (short) 3252);
        put(KickUserMessageEvent.class, (short) 95);
        put(AssignRightsMessageEvent.class, (short) 96);
        put(RemoveRightsMessageEvent.class, (short) 97);
        put(LetUserInMessageEvent.class, (short) 98);
        put(RemoveAllRightsMessageEvent.class, (short) 155);
        put(BanUserMessageEvent.class, (short) 320);
        put(CallGuideBotMessageEvent.class, (short) 440);
        put(KickBotMessageEvent.class, (short) 441);
        put(GetUserTagsMessageEvent.class, (short) 263);
        put(GetSelectedBadgesMessageEvent.class, (short) 159);
        put(GetHabboGroupBadgesMessageEvent.class, (short) 230);
        put(GetHabboGroupDetailsMessageEvent.class, (short) 231);
        put(IgnoreUserMessageEvent.class, (short) 319);
        put(GetIgnoredUsersMessageEvent.class, (short) 321);
        put(UnignoreUserMessageEvent.class, (short) 322);
        put(RespectUserMessageEvent.class, (short) 371);
        put(RespectPetMessageEvent.class, (short) 3005);
        put(PickIssuesMessageEvent.class, (short) 450);
        put(ReleaseIssuesMessageEvent.class, (short) 451);
        put(CloseIssuesMessageEvent.class, (short) 452);
        put(GetModeratorUserInfoMessageEvent.class, (short) 454);
        put(GetUserChatlogMessageEvent.class, (short) 455);
        put(GetRoomChatlogMessageEvent.class, (short) 456);
        put(GetCfhChatlogMessageEvent.class, (short) 457);
        put(GetRoomVisitsMessageEvent.class, (short) 458);
        put(GetModeratorRoomInfoMessageEvent.class, (short) 459);
        put(ModerateRoomMessageEvent.class, (short) 460);
        put(ModAlertMessageEvent.class, (short) 461);
        put(ModMessageMessageEvent.class, (short) 462);
        put(ModKickMessageEvent.class, (short) 463);
        put(ModBanMessageEvent.class, (short) 464);
        put(ModeratorActionMessageEvent.class, (short) 200);
        put(CallForHelpMessageEvent.class, (short) 453);
        put(GetPendingCallsForHelpMessageEvent.class, (short) 237);
        put(DeletePendingCallsForHelpMessageEvent.class, (short) 238);
        put(GetClientFaqsMessageEvent.class, (short) 416);
        put(GetFaqCategoriesMessageEvent.class, (short) 417);
        put(GetFaqTextMessageEvent.class, (short) 418);
        put(SearchFaqsMessageEvent.class, (short) 419);
        put(GetFaqCategoryMessageEvent.class, (short) 420);
        put(ChangeEmailMessageEvent.class, (short) 3253);
        put(ScrGetUserInfoMessageEvent.class, (short) 26);
        put(GetAchievementShareIdMessageEvent.class, (short) 481);
        put(ResetUnseenItemsMessageEvent.class, (short) 3111);
        put(PurchaseFromCatalogMessageEvent.class, (short) 100);
        put(PurchaseFromCatalogAsGiftMessageEvent.class, (short) 472);
        put(GetGiftWrappingConfigurationMessageEvent.class, (short) 473);
        put(GetClubGiftInfoMessageEvent.class, (short) 474);
        put(SelectClubGiftMessageEvent.class, (short) 475);
        put(GetCatalogIndexMessageEvent.class, (short) 101);
        put(GetCatalogPageMessageEvent.class, (short) 102);
        put(RedeemVoucherMessageEvent.class, (short) 129);
        put(GetIsOfferGiftableMessageEvent.class, (short) 3030);
        put(GetClubOffersMessageEvent.class, (short) 3031);
        put(GetSellablePetBreedsMessageEvent.class, (short) 3007);
        put(MarkCatalogNewAdditionsPageOpenedMessageEvent.class, (short) 3034);
        put(GetHabboClubExtendOfferMessageEvent.class, (short) 3035);
        put(PurchaseVipMembershipExtensionMessageEvent.class, (short) 3036);
        put(PurchaseBasicMembershipExtensionMessageEvent.class, (short) 3037);
        put(GetHabboBasicMembershipExtendOfferMessageEvent.class, (short) 3038);
        put(GetRecyclerPrizesMessageEvent.class, (short) 412);
        put(GetRecyclerStatusMessageEvent.class, (short) 413);
        put(RecycleItemsMessageEvent.class, (short) 414);
        put(GetRoomAdMessageEvent.class, (short) 126);
        put(GetInterstitialMessageEvent.class, (short) 182);
        put(LatencyPingRequestMessageEvent.class, (short) 315);
        put(LatencyPingReportMessageEvent.class, (short) 316);
        put(PerformanceLogMessageEvent.class, (short) 421);
        put(LagWarningReportMessageEvent.class, (short) 422);
        put(EventLogMessageEvent.class, (short) 482);
        put(VoteAnswerMessageEvent.class, (short) 112);
        put(PollRejectMessageEvent.class, (short) 235);
        put(PollStartMessageEvent.class, (short) 234);
        put(PollAnswerMessageEvent.class, (short) 236);
        put(ExitLockerRoomMessageEvent.class, (short) 108);
        put(ChangeRoomMessageEvent.class, (short) 111);
        put(TryBusMessageEvent.class, (short) 113);
        put(ApproveNameMessageEvent.class, (short) 42);
        put(GetSoundMachinePlayListMessageEvent.class, (short) 245);
        put(GetNowPlayingMessageEvent.class, (short) 249);
        put(GetSongInfoMessageEvent.class, (short) 221);
        put(GetSoundSettingsMessageEvent.class, (short) 228);
        put(SetSoundSettingsMessageEvent.class, (short) 229);
        put(AddJukeboxDiskMessageEvent.class, (short) 0xFF);
        put(RemoveJukeboxDiskMessageEvent.class, (short) 0x0100);
        put(GetJukeboxPlayListMessageEvent.class, (short) 258);
        put(GetUserSongDisksMessageEvent.class, (short) 259);
        put(GetWardrobeMessageEvent.class, (short) 375);
        put(SaveWardrobeOutfitMessageEvent.class, (short) 376);
        put(ChangeUserNameMessageEvent.class, (short) 470);
        put(CheckUserNameMessageEvent.class, (short) 471);
        put(UpdateFigureDataMessageEvent.class, (short) 44);
        put(UpdateTriggerMessageEvent.class, (short) 3050);
        put(UpdateActionMessageEvent.class, (short) 3051);
        put(UpdateConditionMessageEvent.class, (short) 3052);
        put(OpenMessageEvent.class, (short) 3053);
        put(ApplySnapshotMessageEvent.class, (short) 3054);
        put(GetQuestsMessageEvent.class, (short) 3101);
        put(AcceptQuestMessageEvent.class, (short) 3102);
        put(RejectQuestMessageEvent.class, (short) 3106);
        put(OpenQuestTrackerMessageEvent.class, (short) 3107);
        put(StartCampaignMessageEvent.class, (short) 3108);
        put(FriendRequestQuestCompleteMessageEvent.class, (short) 3210);
        put(FaceBookIsLoggedOnMessageEvent.class, (short) 3300);
        put(FaceBookIsLoggedOffMessageEvent.class, (short) 3301);
        put(FaceBookInitiateAddFriendsMessageEvent.class, (short) 3311);
    }});

    public DefaultMessageHeaderProvider() {
        // TODO: Load the headers from a XML file or something.
    }

    @Override
    public short getHeaderByEventClass(Class eventClass) {
        if (this.eventClasses.containsKey(eventClass)) {
            return (short) this.eventClasses.get(eventClass);
        }

        return -4000;
    }

    @Override
    public short getHeaderByComposerClass(Class composerClass) {
        if(this.composerClasses.containsKey(composerClass)) {
            return (short) this.composerClasses.get(composerClass);
        }

        return -4000;
    }

    @Override
    public Class getEventClassByHeader(short header) {
        return (Class) this.eventClasses.inverse().get(header);
    }

    @Override
    public Class getComposerClassByHeader(short header) {
        return (Class) this.composerClasses.inverse().get(header);
    }
}
